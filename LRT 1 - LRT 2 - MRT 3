# LRT 1
lrt1_stations = [
    "Roosevelt", "Balintawak", "Monumento", "5th Avenue", "R. Papa", "Abad Santos",
    "Blumentritt", "Tayuman", "Bambang", "Doroteo Jose", "Carriedo", "Central Terminal",
    "UN Avenue", "Pedro Gil", "Quirino", "Vito Cruz", "Gil Puyat", "Libertad",
    "EDSA", "Baclaran"
]




lrt1_distances = [
    0.59, 1.01, 0.73, 1.06, 0.83, 0.79, 0.75, 1.21, 0.73,
    0.69, 0.65, 0.62, 0.67, 0.93, 0.66, 0.95, 1.09, 2.25,
    1.87
]




lrt1_stored_value_fares = [
    [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 23, 24, 25, 26, 27, 28, 29, 30, 33, 35],
    [14, 13, 15, 15, 17, 18, 19, 20, 21, 22, 23, 24, 24, 25, 26, 27, 28, 29, 32, 34],
    [15, 15, 13, 14, 15, 16, 17, 18, 20, 21, 22, 22, 23, 24, 25, 26, 27, 28, 31, 33],
    [16, 15, 14, 13, 15, 16, 17, 17, 19, 20, 21, 21, 22, 23, 24, 25, 26, 27, 30, 32],
    [17, 17, 15, 15, 13, 14, 15, 16, 18, 19, 19, 20, 21, 22, 23, 24, 25, 26, 29, 31],
    [18, 18, 16, 16, 14, 13, 14, 15, 17, 18, 18, 19, 20, 21, 22, 23, 24, 25, 28, 30],
    [19, 19, 17, 17, 15, 14, 13, 14, 16, 17, 17, 18, 19, 20, 21, 22, 23, 24, 27, 29],
    [20, 20, 18, 17, 16, 15, 14, 13, 15, 16, 16, 17, 18, 19, 20, 21, 22, 23, 26, 28],
    [22, 21, 20, 19, 18, 17, 16, 15, 13, 14, 15, 16, 17, 17, 18, 19, 20, 22, 24, 27],
    [23, 22, 21, 20, 19, 18, 17, 16, 14, 13, 14, 15, 16, 16, 18, 18, 20, 21, 24, 26],
    [23, 23, 22, 21, 19, 18, 17, 16, 15, 14, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25],
    [24, 24, 22, 21, 20, 19 ,18, 17, 16, 15, 14, 13, 14, 15, 16, 17, 18, 19, 22, 24],
    [25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 14, 15, 16, 17, 18, 21, 23],
    [26, 25, 24, 23, 22, 21, 20, 19, 17, 16, 16, 15, 14, 13, 14, 15, 16, 18, 20, 23],
    [27, 26, 25, 24, 23, 22, 21, 20, 18, 18, 17, 16, 15, 14, 13, 14, 15, 17, 19, 22],
    [28, 27, 26, 25, 24, 23, 22, 21, 19, 18, 18, 17, 16, 15, 14, 13, 14, 16, 18, 21],
    [29, 28, 27, 26, 25, 24, 23, 22, 20, 20, 19, 18, 17, 16, 15, 14, 13, 15, 17, 20],
    [30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 18, 17, 16, 15, 13, 16, 18],
    [33, 32, 31, 30, 29, 28, 27, 26, 24, 24, 23, 22, 21, 20, 19, 18, 17, 16, 13, 16],
    [35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 23, 22, 21, 20, 18, 16, 13]
]




lrt1_single_journey_fares = [
    [0, 15, 15, 20, 20, 20, 20, 20, 25, 25, 25, 25, 25, 30, 30, 30, 30, 30, 35, 35],
    [15, 0, 15, 15, 20, 20, 20, 20, 25, 25, 25, 25, 25, 25, 30, 30, 30, 30, 35, 35],
    [15, 15, 0, 15, 15, 20, 20, 20, 20, 25, 25, 25, 25, 25, 25, 30, 30, 30, 35, 35],
    [20, 15, 15, 0, 15, 20, 20, 20, 20, 20, 25, 25, 25, 25, 25, 25, 30, 30, 30, 35],
    [20, 20, 15, 15, 0, 15, 15, 20, 20, 20, 20, 20, 25, 25, 25, 25, 25, 30, 30, 35],
    [20, 20, 20, 20, 15, 0, 15, 15, 20, 20, 20, 20, 20, 25, 25, 25, 25, 25, 30, 30],
    [20, 20, 20, 20, 15, 15, 0, 15, 20, 20, 20, 20, 20, 20, 25, 25, 25, 25, 30, 30],
    [20, 20, 20, 20, 20, 15, 15, 0, 15, 20, 20, 20, 20, 20, 20, 25, 25, 25, 30, 30],
    [25, 25, 20, 20, 20, 20, 20, 15, 0, 15, 15, 20, 20, 20, 20, 20, 20, 25, 25, 30],
    [25, 25, 25, 20, 20, 20, 20, 20, 15, 0, 15, 15, 20, 20, 20, 20, 20, 25, 25, 30],
    [25, 25, 25, 25, 20, 20, 20, 20, 15, 15, 0, 15, 15, 20, 20, 20, 20, 20, 25, 25],
    [25, 25, 25, 25, 20, 20, 20, 20, 20, 15, 15, 0, 15, 15, 20, 20, 20, 20, 25, 25],
    [25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 15, 15, 0, 15, 15, 20, 20, 20, 25, 25],
    [30, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 15, 15, 0, 15, 15, 20, 20, 20, 25],
    [30, 30, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 15, 15, 0, 15, 15, 20, 20, 25],
    [30, 30, 30, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 15, 15, 0, 15, 20, 20, 25],
    [30, 30, 30, 30, 25, 25, 25, 25, 20, 20, 20, 20, 20, 20, 15, 15, 0, 15, 20, 20],
    [30, 30, 30, 30, 30, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 20, 15, 0, 20, 20],
    [35, 35, 35, 30, 30, 30, 30, 30, 25, 25, 25, 25, 25, 20, 20, 20, 20, 20, 0, 20],
    [35, 35, 35, 35, 35, 30, 30, 30, 30, 30, 25, 25, 25, 25, 25, 25, 20, 20, 20, 0]
]




# LRT 2
lrt2_stations = [
    "Antipolo", "Marikina-Pasig", "Santolan", "Katipunan",
    "Anonas", "Araneta Center-Cubao", "Betty Go-Belmonte", "Gilmore",
    "J. Ruiz", "V. Mapa", "Pureza", "Legarda", "Recto"
]




lrt2_distances = [
    1.05, 1.389, 1.357, 1.234, 0.928, 1.075, 1.164, 1.438, 0.955, 1.97, 0.9, 0.7
]




lrt2_stored_value_fares = [
    [13, 15, 16, 18, 19, 21, 22, 23, 25, 26, 28, 31, 33],
    [15, 13, 15, 17, 18, 19, 21, 22, 24, 25, 27, 29, 32],
    [16, 15, 13, 15, 16, 18, 19, 20, 22, 23, 26, 28, 30],
    [18, 17, 15, 13, 15, 16, 17, 19, 20, 22, 24, 26, 29],
    [19, 18, 16, 15, 13, 14, 16, 17, 19, 20, 22, 24, 27],
    [21, 19, 18, 16, 14, 13, 15, 16, 18, 19, 21, 23, 26],
    [22, 21, 19, 17, 16, 15, 13, 15, 16, 18, 20, 22, 25],
    [23, 22, 20, 19, 17, 16, 15, 13, 15, 16, 19, 21, 23],
    [25, 24, 22, 20, 19, 18, 16, 15, 13, 14, 17, 19, 22],
    [26, 25, 23, 22, 20, 19, 18, 16, 14, 13, 16, 18, 21],
    [28, 27, 26, 24, 22, 21, 20, 19, 17, 16, 13, 15, 18],
    [31, 29, 28, 26, 24, 23, 22, 21, 19, 18, 15, 13, 16],
    [33, 32, 30, 29, 27, 26, 25, 23, 22, 21, 18, 16, 13]
]




lrt2_single_journey_fares = [
    [0, 15, 20, 20, 20, 25, 25, 25, 25, 30, 30, 35, 35],
    [15, 0, 15, 20, 20, 20, 25, 25, 25, 25, 30, 30, 35],
    [20, 15, 0, 15, 20, 20, 20, 20, 25, 25, 30, 30, 30],
    [20, 20, 15, 0, 15, 20, 20, 20, 20, 25, 25, 30, 30],
    [20, 20, 20, 15, 0, 15, 20, 20, 20, 20, 25, 25, 30],
    [25, 20, 20, 20, 15, 0, 15, 20, 20, 20, 25, 25, 30],
    [25, 25, 20, 20, 20, 15, 0, 15, 20, 20, 20, 25, 25],
    [25, 25, 20, 20, 20, 20, 15, 0, 15, 20, 20, 25, 25],
    [25, 25, 25, 20, 20, 20, 20, 15, 0, 15, 20, 20, 25],
    [30, 25, 25, 25, 20, 20, 20, 20, 15, 0, 20, 20, 25],
    [30, 30, 30, 25, 25, 25, 20, 20, 20, 20, 0, 15, 20],
    [35, 30, 30, 30, 25, 25, 25, 25, 20, 20, 15, 0, 20],
    [35, 35, 30, 30, 30, 30, 25, 25, 25, 25, 20, 20, 0]
]




# MRT 3
mrt3_stations = [
    "North Avenue", "Quezon Avenue", "GMA Kamuning", "Araneta Center Cubao",
    "Santolan-Annapolis", "Ortigas", "Shaw Boulevard", "Bonifacio Avenue",
    "Guadalupe", "Buendia", "Ayala", "Magallanes", "Taft Avenue"
]




mrt3_distances = [
    1.7, 1.3, 1.8, 1.5, 1.6, 1.3, 1.4, 1.7, 2.2, 1.0, 1.2, 1.4
]




mrt3_fares = [
    [0, 13, 13, 16, 16, 20, 20, 20, 24, 24, 24, 28, 28],
    [13, 0, 13, 13, 13, 16, 20, 20, 20, 24, 24, 24, 28],
    [13, 13, 0, 13, 13, 16, 16, 20, 20, 20, 24, 24, 28],
    [16, 13, 13, 0, 13, 16, 16, 20, 20, 20, 24, 24, 24],
    [16, 16, 13, 13, 0, 13, 16, 16, 20, 20, 20, 24, 24],
    [20, 16, 16, 16, 13, 0, 13, 13, 16, 16, 20, 24, 24],
    [20, 20, 16, 16, 16, 13, 0, 13, 13, 16, 16, 20, 24],
    [20, 20, 20, 16, 16, 13, 13, 0, 13, 13, 16, 16, 20],
    [24, 20, 20, 20, 16, 16, 13, 13, 0, 13, 13, 16, 16],
    [24, 24, 20, 20, 20, 16, 16, 13, 13, 0, 13, 13, 16],
    [24, 24, 24, 24, 20, 20, 16, 16, 13, 13, 0, 13, 13],
    [28, 24, 24, 24, 24, 20, 20, 16, 16, 13, 13, 0, 13],
    [28, 28, 28, 24, 24, 24, 24, 20, 16, 16, 13, 13, 0]
]




discounts = {
    "regular": 0.0,
    "student": 0.20,
    "pwd": 0.30,
    "senior": 0.30
}




def get_card_type():
    print("\n♡ Select Passenger Type: Regular, Student, PWD/Senior ♡")
    card_type = input("\nʚ Enter Passenger Type: ").strip().lower()
    print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
    while card_type not in discounts:
        card_type = input("ʚ Enter Passenger Type: ").strip().lower()
        print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌\n")
    return card_type




def calculate_fare(start_idx, end_idx, fare_matrix, discount_rate):
    fare = fare_matrix[start_idx][end_idx]
    discounted_fare = fare * (1 - discount_rate)
    return discounted_fare




def main():
    total_distance = 0
    total_fare = 0
    total_stations_passed = 0
    current_system = None
   
    card_type = get_card_type()
    discount_rate = discounts[card_type]




    print("\n♡ Select Card Type: Enter '1' for Beep Card or '2' for Single Journey Ticket ♡")




    while True:
        fare_type = input("\nʚ Enter Card Type: ").strip()
        if fare_type in ['1', '2']:
            break
        else:
            print("\nInvalid input. Please enter '1' for Beep Card or '2' for Single Journey Ticket.")
   
    print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
   
    if fare_type == '1':
        lrt1_fare_matrix = lrt1_stored_value_fares
        lrt2_fare_matrix = lrt2_stored_value_fares
        mrt3_fare_matrix = mrt3_fares
    else:
        lrt1_fare_matrix = lrt1_single_journey_fares
        lrt2_fare_matrix = lrt2_single_journey_fares
        mrt3_fare_matrix = mrt3_fares




    lrt1_system = {
        "name": "LRT 1",
        "stations": lrt1_stations,
        "distances": lrt1_distances,
        "fare_matrix": lrt1_fare_matrix
    }
   
    lrt2_system = {
        "name": "LRT 2",
        "stations": lrt2_stations,
        "distances": lrt2_distances,
        "fare_matrix": lrt2_fare_matrix
    }




    mrt3_system = {
        "name": "MRT 3",
        "stations": mrt3_stations,
        "distances": mrt3_distances,
        "fare_matrix": mrt3_fare_matrix
    }




    while True:
        print("\n♡ Choose Starting Line: ♡")
        print("(Enter Number Only)\n")
        print("1: LRT 1")
        print("2: LRT 2")
        print("3: MRT 3")
       
        starting_line_choice = input("\nʚ Enter Line Choice: ").strip()
        print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")




        if starting_line_choice == '1':
            current_system = lrt1_system
            break
        elif starting_line_choice == '2':
            current_system = lrt2_system
            break
        elif starting_line_choice == '3':
            current_system = mrt3_system
            break
        else:
            print("\n♡ Invalid choice. Please select either '1' for LRT 1 or '2' for LRT 2 or '3' for MRT 3. ♡")




    while True:
        print("\n♡ List of {} Stations ♡".format(current_system['name']))
        print("(Enter Number Only)\n")
        for idx, station in enumerate(current_system['stations']):
            print(f"{idx}: {station}")
        print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
       
        try:
            initial_station_idx = int(input("\nʚ Select Initial Station: ").strip())
            if initial_station_idx < 0 or initial_station_idx >= len(current_system['stations']):
                print("\n♡ Invalid station number. Please select a valid station number. ♡")
            else:
                print(f"\n» You are currently at {current_system['stations'][initial_station_idx]} station.")
                break
        except ValueError:
            print("\n♡ Invalid input. Please enter a number corresponding to a station. ♡")




#LRT 1 TO LRT 2
    while True:
        if current_system["name"] == "LRT 1" and initial_station_idx == lrt1_stations.index("Doroteo Jose"):
            print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")




            while True:
                transfer = input("\n♡ Do you want to transfer to LRT 2 at Recto? (yes/no): ").strip().lower()
                if transfer in ["yes", "no"]:
                    break
                else:
                    print("Invalid input. Please enter 'yes' or 'no'.")




            if transfer == "yes":
                current_system = lrt2_system
                initial_station_idx = lrt2_stations.index("Recto")
                print("\n» You are now at Recto Station (LRT 2).")
            if transfer == "yes":
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                print(f"\n♡ List of {current_system['name']} Stations ♡")
                print("(Enter Number Only)\n")
                for idx, station in enumerate(current_system['stations']):
                    print(f"{idx}: {station}")




#LRT 2 TO LRT 1
        elif current_system["name"] == "LRT 2" and initial_station_idx == lrt2_stations.index("Recto"):
            while True:
                transfer = input("\n♡ Do you want to transfer to LRT 1 at Doroteo Jose? (yes/no): ").strip().lower()
                if transfer in ["yes", "no"]:
                    break
                else:
                    print("Invalid input. Please enter 'yes' or 'no'.")




            if transfer == "yes":
                current_system = lrt1_system
                initial_station_idx = lrt1_stations.index("Doroteo Jose")
                print("\n» You are now at Doroteo Jose Station (LRT 1).")
            if transfer == "yes":
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                print(f"\n♡ List of {current_system['name']} Stations ♡")
                print("(Enter Number Only)\n")
                for idx, station in enumerate(current_system['stations']):
                    print(f"{idx}: {station}")




#LRT 2 TO MRT 3
        elif current_system["name"] == "LRT 2" and initial_station_idx == lrt2_stations.index("Araneta Center-Cubao"):
            while True:
                transfer = input("\n♡ Do you want to transfer to MRT 3 at Araneta Center-Cubao Station? (yes/no): ").strip().lower()
                if transfer in ["yes", "no"]:
                    break
                else:
                    print("Invalid input. Please enter 'yes' or 'no'.")




            if transfer == "yes":
                current_system = mrt3_system
                initial_station_idx =  mrt3_stations.index("Araneta Center Cubao")
                print("\n» You are now at Araneta Center-Cubao Station (MRT 3).")
            if transfer == "yes":
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                print(f"\n♡ List of {current_system['name']} Stations ♡")
                print("(Enter Number Only)\n")
                for idx, station in enumerate(current_system['stations']):
                    print(f"{idx}: {station}")




#MRT 3 TO LRT 2
        elif current_system["name"] == "MRT 3" and initial_station_idx == mrt3_stations.index("Araneta Center Cubao"):
            while True:
                transfer = input("\n♡ Do you want to transfer to LRT 2 at Araneta Center-Cubao Station? (yes/no): ").strip().lower()
                if transfer in ["yes", "no"]:
                    break
                else:
                    print("Invalid input. Please enter 'yes' or 'no'.")




            if transfer == "yes":
                current_system = lrt2_system
                initial_station_idx =  lrt2_stations.index("Araneta Center-Cubao")
                print("\n» You are now at Araneta Center-Cubao Station (LRT 2).")
            if transfer == "yes":
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                print(f"\n♡ List of {lrt2_system['name']} Stations ♡")
                print("(Enter Number Only)\n")
                for idx, station in enumerate(current_system['stations']):
                    print(f"{idx}: {station}")




#MRT 3 TO LRT 1
        elif current_system["name"] == "MRT 3" and initial_station_idx == mrt3_stations.index("Taft Avenue"):
            while True:
                transfer = input("\n♡ Do you want to transfer to LRT 1 at EDSA Station? (yes/no): ").strip().lower()
                if transfer in ["yes", "no"]:
                    break
                else:
                    print("Invalid input. Please enter 'yes' or 'no'.")




            if transfer == "yes":
                current_system = lrt1_system
                initial_station_idx =  lrt1_stations.index("EDSA")
                print("\n» You are now at EDSA Station (LRT 1).")
            if transfer == "yes":
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                print(f"\n♡ List of {lrt1_system['name']} Stations ♡")
                print("(Enter Number Only)\n")
                for idx, station in enumerate(current_system['stations']):
                    print(f"{idx}: {station}")




#LRT 1 TO MRT 3
        elif current_system["name"] == "LRT 1" and initial_station_idx == lrt1_stations.index("EDSA"):
            while True:
                transfer = input("\n♡ Do you want to transfer to MRT 3 at Taft Avenue Station? (yes/no): ").strip().lower()
                if transfer in ["yes", "no"]:
                    break
                else:
                    print("Invalid input. Please enter 'yes' or 'no'.")




            if transfer == "yes":
                current_system = mrt3_system
                initial_station_idx =  mrt3_stations.index("Taft Avenue")
                print("\n» You are now at Taft Avenue Station (MRT 3).")
            if transfer == "yes":
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                print(f"\n♡ List of {mrt3_system['name']} Stations ♡")
                print("(Enter Number Only)\n")
                for idx, station in enumerate(current_system['stations']):
                    print(f"{idx}: {station}")




        while True:
            try:
                print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
                final_station_idx = int(input("\nʚ Select Final Station: ").strip())
                if final_station_idx < 0 or final_station_idx >= len(current_system['stations']):
                    print("\n♡ Invalid station number. Please select a valid station number. ♡")
                elif final_station_idx == initial_station_idx:
                    print("\n♡ Final station cannot be the same as the initial station. Please select a different station. ♡")
                else:
                    break
            except ValueError:
                print("\n♡ Invalid input. Please enter a number corresponding to a station. ♡")




        fare = calculate_fare(initial_station_idx, final_station_idx, current_system['fare_matrix'], discount_rate)
        distance = sum(current_system['distances'][min(initial_station_idx, final_station_idx):max(initial_station_idx, final_station_idx)])
        stations_passed = abs(final_station_idx - initial_station_idx)




        total_distance += distance
        total_fare += fare
        total_stations_passed += stations_passed




        print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
        print(f"\nʚ Stations traveled: {current_system['stations'][initial_station_idx]} -> {current_system['stations'][final_station_idx]}")
        print(f"ʚ Distance Traveled for this ride: {distance:.2f} km")
        print(f"ʚ Fare for this ride: PHP {fare:.2f}")
        print(f"\n» You have arrived at {current_system['stations'][final_station_idx]} station.")
        print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")






        ride_again = input("\n♡ Do you want to ride again? (yes/no): ").strip().lower()
        if ride_again != 'yes':
            print("\n﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌﹌")
            print(f"\nʚ Total Distance Traveled: {total_distance:.2f} km")
            print(f"ʚ Total Stations Passed: {total_stations_passed} stations")
            print(f"ʚ Total Fare: PHP {total_fare:.2f}")
            print("\n♡ Thank you for riding! ♡")
            break




        initial_station_idx = final_station_idx
        print(f"\n» You are currently at {current_system['stations'][initial_station_idx]} station.")




if __name__ == "__main__":
    main()
